* work space
#+begin_src emacs-lisp
  (save-buffer)
  (org-babel-tangle)
  (async-shell-command "./copy.sh")
#+end_src

#+RESULTS:
: #<window 150 on *Async Shell Command*>

* Main config

** path
#+begin_src conf :tangle ./config.fish
  set PATH {$HOME}/.cargo/bin {$HOME}/bin {$PATH}
#+end_src

** sudo without password
#+begin_src conf :tangle ./config.fish
  export SUDO_ASKPASS={$HOME}/SUDO_ASKPASS
#+end_src

** nice functions
#+begin_src conf :tangle ./config.fish
  function sudo
      /usr/bin/sudo -A $argv
  end

  function top
      htop $argv
  end

  function mysync
      rsync '-avh' '--progress' $argv
      sync ; sync
  end

  function puthere
      mysync (cat /tmp/list) ./
  end

  function ls
      lsd $argv
  end

  function cat
      bat $argv
  end

  function du
      dust $argv
  end

  function txn
      tmux new-window $argv
  end

  function txp
      tmux split-pane $argv
  end

  function y
  	set tmp (mktemp -t "yazi-cwd.XXXXXX")
  	yazi $argv --cwd-file="$tmp"
  	if set cwd (command cat -- "$tmp"); and [ -n "$cwd" ]; and [ "$cwd" != "$PWD" ]
  		builtin cd -- "$cwd"
  	end
  	rm -f -- "$tmp"
  end

  function sd
      cd (fd -t d | sk)
  end

  function lh
      ln -vfs -- (realpath .) {$HOME}/link
  end
#+end_src


** nice abbreviations
#+begin_src conf :tangle ./config.fish
  abbr --add --position command -- ls lsd
  abbr --add --position command -- top htop
  abbr --add --position command -- cat bat
  abbr --add --position command -- du dust
#+end_src

** starship prompt
#+begin_src conf :tangle ./config.fish
  function fish_prompt
      switch "$fish_key_bindings"
          case fish_hybrid_key_bindings fish_vi_key_bindings
              set STARSHIP_KEYMAP "$fish_bind_mode"
          case '*'
              set STARSHIP_KEYMAP insert
      end
      set STARSHIP_CMD_PIPESTATUS $pipestatus
      set STARSHIP_CMD_STATUS $status
      # Account for changes in variable name between v2.7 and v3.0
      set STARSHIP_DURATION "$CMD_DURATION$cmd_duration"
      set STARSHIP_JOBS (count (jobs -p))
      if test "$TRANSIENT" = "1"
          set -g TRANSIENT 0
          # Clear from cursor to end of screen as `commandline -f repaint` does not do this
          # See https://github.com/fish-shell/fish-shell/issues/8418
          printf \e\[0J
          if type -q starship_transient_prompt_func
              starship_transient_prompt_func
          else
              printf "\e[1;32m‚ùØ\e[0m "
          end
      else
          starship prompt --terminal-width="$COLUMNS" --status=$STARSHIP_CMD_STATUS --pipestatus="$STARSHIP_CMD_PIPESTATUS" --keymap=$STARSHIP_KEYMAP --cmd-duration=$STARSHIP_DURATION --jobs=$STARSHIP_JOBS
      end
  end

  function fish_right_prompt
      switch "$fish_key_bindings"
          case fish_hybrid_key_bindings fish_vi_key_bindings
              set STARSHIP_KEYMAP "$fish_bind_mode"
          case '*'
              set STARSHIP_KEYMAP insert
      end
      set STARSHIP_CMD_PIPESTATUS $pipestatus
      set STARSHIP_CMD_STATUS $status
      # Account for changes in variable name between v2.7 and v3.0
      set STARSHIP_DURATION "$CMD_DURATION$cmd_duration"
      set STARSHIP_JOBS (count (jobs -p))
      if test "$RIGHT_TRANSIENT" = "1"
          set -g RIGHT_TRANSIENT 0
          if type -q starship_transient_rprompt_func
              starship_transient_rprompt_func
          else
              printf ""
          end
      else
          starship prompt --right --terminal-width="$COLUMNS" --status=$STARSHIP_CMD_STATUS --pipestatus="$STARSHIP_CMD_PIPESTATUS" --keymap=$STARSHIP_KEYMAP --cmd-duration=$STARSHIP_DURATION --jobs=$STARSHIP_JOBS
      end
  end

  # Disable virtualenv prompt, it breaks starship
  set -g VIRTUAL_ENV_DISABLE_PROMPT 1

  # Remove default mode prompt
  builtin functions -e fish_mode_prompt

  set -gx STARSHIP_SHELL "fish"

  # Transience related functions
  function reset-transient --on-event fish_postexec
      set -g TRANSIENT 0
      set -g RIGHT_TRANSIENT 0
  end

  function transient_execute
      if commandline --is-valid || test -z "$(commandline)" && not commandline --paging-mode
          set -g TRANSIENT 1
          set -g RIGHT_TRANSIENT 1
          commandline -f repaint
      end
      commandline -f execute
  end

  # --user is the default, but listed anyway to make it explicit.
  function enable_transience --description 'enable transient prompt keybindings'
      bind --user \r transient_execute
      bind --user -M insert \r transient_execute
  end

  # Erase the transient prompt related key bindings.
  # --user is the default, but listed anyway to make it explicit.
  # Erasing a user binding will revert to the preset.
  function disable_transience --description 'remove transient prompt keybindings'
      bind --user -e \r
      bind --user -M insert -e \r
  end


  # Set up the session key that will be used to store logs
  # We don't use `random [min] [max]` because it is unavailable in older versions of fish shell
  set -gx STARSHIP_SESSION_KEY (string sub -s1 -l16 (random)(random)(random)(random)(random)0000000000000000)
#+end_src

* automate sudo password
#+begin_src sh :shebang #!/bin/sh :results output :tangle ./SUDO_ASKPASS
  echo 'asd'
#+end_src

* To destination
#+begin_src sh :shebang #!/bin/sh :results output :tangle ./copy.sh
  cd "$(dirname -- "${0}")"
  mkdir -pv -- "${HOME}/.config/fish/"
  cp -vf -- './config.fish' "${HOME}/.config/fish/config.fish"
  cp -vf -- './SUDO_ASKPASS' "${HOME}/SUDO_ASKPASS"
#+end_src
