* COMMENT WORK SPACE

** ELISP
#+begin_src emacs-lisp :results silent
  (save-buffer)
  (org-babel-tangle)
  (async-shell-command "
      git add './M_A_0' ;
      git add './M_A_1' ;
      git add './M_A_2' ;
      git add './M_A_3' ;
      git add './M_A_4' ;
      git add './M_A_5' ;
      git add './M_A_6' ;
      git add './M_A_7' ;
      git add './M_A_8' ;
      git add './M_A_9' ;
      git add './M_A_A' ;
      git add './M_A_D' ;
      git add './M_A_E' ;
      git add './M_A_F' ;
      git add './M_A_G' ;
      git add './M_A_GRAVE' ;
      git add './M_A_I' ;
      git add './M_A_O' ;
      git add './M_A_P' ;
      git add './M_A_Q' ;
      git add './M_A_R' ;
      git add './M_A_S' ;
      git add './M_A_T' ;
      git add './M_A_U' ;
      git add './M_A_W' ;
      git add './M_A_Y' ;
      git add './M_C_0' ;
      git add './M_C_1' ;
      git add './M_C_2' ;
      git add './M_C_3' ;
      git add './M_C_4' ;
      git add './M_C_5' ;
      git add './M_C_6' ;
      git add './M_C_7' ;
      git add './M_C_8' ;
      git add './M_C_9' ;
      git add './M_C_A' ;
      git add './M_C_D' ;
      git add './M_C_E' ;
      git add './M_C_ESC' ;
      git add './M_C_F' ;
      git add './M_C_G' ;
      git add './M_C_Q' ;
      git add './M_C_R' ;
      git add './M_C_S' ;
      git add './M_C_T' ;
      git add './M_C_W' ;
      git add './M_ESC' ;
      git add './M_F1' ;
      git add './M_F2' ;
      git add './M_F3' ;
      git add './README.org' ;
      git add './copy.sh' ;
      git add './enter_emacs_flatpak' ;
  " "log" "err")
#+end_src

* Script to copy the other scripts:
#+begin_src sh :shebang #!/bin/sh :results output :tangle ./copy.sh
  W () {
      sudo -A cp -vf "${1}" '/usr/local/bin/'
  }

  W 'M_A_0' ;
  W 'M_A_1' ;
  W 'M_A_2' ;
  W 'M_A_3' ;
  W 'M_A_4' ;
  W 'M_A_5' ;
  W 'M_A_6' ;
  W 'M_A_7' ;
  W 'M_A_8' ;
  W 'M_A_9' ;
  W 'M_A_A' ;
  W 'M_A_D' ;
  W 'M_A_E' ;
  W 'M_A_F' ;
  W 'M_A_G' ;
  W 'M_A_GRAVE' ;
  W 'M_A_I' ;
  W 'M_A_O' ;
  W 'M_A_P' ;
  W 'M_A_Q' ;
  W 'M_A_R' ;
  W 'M_A_S' ;
  W 'M_A_T' ;
  W 'M_A_U' ;
  W 'M_A_W' ;
  W 'M_A_Y' ;
  W 'M_C_0' ;
  W 'M_C_1' ;
  W 'M_C_2' ;
  W 'M_C_3' ;
  W 'M_C_4' ;
  W 'M_C_5' ;
  W 'M_C_6' ;
  W 'M_C_7' ;
  W 'M_C_8' ;
  W 'M_C_9' ;
  W 'M_C_A' ;
  W 'M_C_D' ;
  W 'M_C_E' ;
  W 'M_C_ESC' ;
  W 'M_C_F' ;
  W 'M_C_G' ;
  W 'M_C_Q' ;
  W 'M_C_R' ;
  W 'M_C_S' ;
  W 'M_C_T' ;
  W 'M_C_W' ;
  W 'M_ESC' ;
  W 'M_F1' ;
  W 'M_F2' ;
  W 'M_F3' ;
  W 'enter_emacs_flatpak' ;
#+end_src

* Simples

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./enter_emacs_flatpak
  export SHELL='bash'
  exec flatpak \
      'run' \
      '--talk-name=org.freedesktop.Flatpak' \
      '--command=bash' \
      'org.gnu.emacs' \
  ;
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_ESC
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_ESC
exec wlogout
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_F1
  exec "alacritty" "msg" "create-window" "-e" "byobu-tmux"
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_F2
  exec "alacritty" "msg" "create-window"
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_F3
  export SHELL='bash'
  exec flatpak \
      'run' \
      '--talk-name=org.freedesktop.Flatpak' \
      '--command=/bin/bash' \
      'org.gnu.emacs' \
      '-c' \
      '
          export PATH="/var/tmp/all/bin:/usr/bin:/bin:/usr/sbin:/sbin:/app/bin";
          . "/usr/lib/sdk/bazel/enable.sh";
          . "/usr/lib/sdk/llvm19/enable.sh";
          . "/usr/lib/sdk/rust-stable/enable.sh";
          . "/usr/lib/sdk/texlive/enable.sh";
          exec "/app/bin/emacsclient" "-c";
      ' \
  ;
#+end_src

* Controls

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_1
  export SHELL='bash'
  exec flatpak \
      'run' \
      '--talk-name=org.freedesktop.Flatpak' \
      '--command=/bin/bash' \
      'org.gnu.emacs' \
      '-c' \
      '
          export PATH="/var/tmp/all/bin:/usr/bin:/bin:/usr/sbin:/sbin:/app/bin";
          . "/usr/lib/sdk/bazel/enable.sh";
          . "/usr/lib/sdk/llvm19/enable.sh";
          . "/usr/lib/sdk/rust-stable/enable.sh";
          . "/usr/lib/sdk/texlive/enable.sh";
          exec "/app/bin/emacs-wrapper" "-c";
      ' \
  ;
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_2
  exec M_F3
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_3
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_4
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_5
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_6
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_7
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_8
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_9
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_0
  exec waybar
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_Q
  exec flatpak run org.wezfurlong.wezterm
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_W
  exec "alacritty" "msg" "create-window" "-e" "byobu-tmux"
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_E
  exec "alacritty" "msg" "create-window" "-e" "enter_emacs_flatpak"
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_R
  exec "footclient" "-e" "enter_emacs_flatpak"
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_T
  "alacritty" "-e" "byobu-tmux" &
  "foot" "-s" &
  wait
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_A
  exec flatpak run org.mozilla.firefox
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_S
  exec flatpak run com.brave.Browser
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_D
  exec dolphin
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_F
  exec pavucontrol
#+end_src

#+begin_src sh :shebang #!/bin/sh :results output :tangle ./M_C_G
  exec footclient nmtui
#+end_src

* Alts

** Sound

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_Q
  exec "amixer" "set" "Master,0" "0%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_W
  exec "amixer" "set" "Master,0" "11%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_E
  exec "amixer" "set" "Master,0" "22%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_R
  exec "amixer" "set" "Master,0" "33%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_T
  exec "amixer" "set" "Master,0" "44%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_Y
  exec "amixer" "set" "Master,0" "55%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_U
  exec "amixer" "set" "Master,0" "66%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_I
  exec "amixer" "set" "Master,0" "77%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_O
  exec "amixer" "set" "Master,0" "88%"
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_P
  exec "amixer" "set" "Master,0" "100%"
#+end_src

** Brightness
#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_GRAVE
light -S '0%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_1
light -S '10%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_2
light -S '20%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_3
light -S '30%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_4
light -S '40%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_5
light -S '50%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_6
light -S '60%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_7
light -S '70%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_8
light -S '80%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_9
light -S '90%'
#+end_src

#+begin_src sh :shebang #!/bin/sh :tangle ./M_A_0
light -S '100%'
#+end_src
