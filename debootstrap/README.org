#+begin_src emacs-lisp
  (save-buffer)
  (org-babel-tangle)
  ;; (async-shell-command "flatpak-spawn --host ./install.sh" "log" "err")
#+end_src

#+RESULTS:
| /home/asd/config_storage/debootstrap/debian_stable_backports.list | /home/asd/config_storage/debootstrap/debian_stable.list | /home/asd/config_storage/debootstrap/debian_testing.list | /home/asd/config_storage/debootstrap/xanmod.list | /home/asd/config_storage/debootstrap/functions.sh | /home/asd/config_storage/debootstrap/install.sh |

* Main install file
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  cd "$('dirname' '--' "${0}")"
  . './functions.sh'
#+end_src

* Main install preparations

** Initial prep
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  export SUDO_ASKPASS="${HOME}/SUDO_ASKPASS"
  export DEBIAN_FRONTEND='noninteractive'
#+end_src

** Functions to set up repo mounts

*** The function
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function set_up_repo  {
      mountpoint ../repo && return
      pushd ../
      sudo -A mkdir -pv -- ./repo
      sudo -A ln -vfs -- /dev/disk/by-partlabel/A_2_EXT4 ./repo/
      sudo -A mv -vf -- ./repo/A_2_EXT4 ./repo/link
      sudo -A mount -o ro ./repo/link ./repo
      ls ./repo
      popd
  }
#+end_src

*** call the function in the install script
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  set_up_repo
#+end_src

** Functions for main debootstrap install

*** Stable
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function install_deb_stable {
      ls ../usr/bin/dpkg && return
      pushd ../
      sudo -A debootstrap --arch=amd64 --no-check-gpg --no-check-certificate stable "$(realpath .)" "file://$(realpath ./repo/everything/apt-mirror/MY_MIRRORS/DEBIAN)"
      popd
  }
#+end_src

*** Testing
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function install_deb_testing {
      ls ../usr/bin/dpkg && return
      pushd ../
      sudo -A debootstrap --arch=amd64 --no-check-gpg --no-check-certificate testing "$(realpath .)" "file://$(realpath ./repo/everything/apt-mirror/MY_MIRRORS/DEBIAN)"
      popd
  }
#+end_src

*** Install root fs
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  install_deb_testing
#+end_src

** Function to mount bind directories from host
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_bind {
      mountpoint "..${1}" && return
      pushd ../
      echo "binding ${1}"
      sudo -A mount -o bind "${1}" ".${1}"
      popd
  }

  function do_bind_all {
      do_bind '/dev'
      do_bind '/dev/pts'
      do_bind '/dev/shm'

      do_bind '/proc'
      do_bind '/sys'
      do_bind '/tmp'
      do_bind '/run'
  }
#+end_src

*** Mount important filesystems
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  do_bind_all
#+end_src

** Function to unmount directories from host
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_unbind {
      mountpoint "..${1}" || return
      pushd ../
      echo "unbinding ${1}"
      sudo -A umount ".${1}"
      popd
  }

  function do_unbind_all {
      do_unbind '/dev/pts'
      do_unbind '/dev/shm'
      do_unbind '/dev'

      do_unbind '/proc'
      do_unbind '/sys'
      do_unbind '/tmp'
      do_unbind '/run'
  }
#+end_src

** Prepare the configs

*** The script
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_copy_conf_testing {
      sudo -A cp -vf -- './debian_testing.list' '../etc/apt/sources.list.d/'
  }

  function do_copy_conf_stable {
      sudo -A cp -vf -- './debian_stable.list' '../etc/apt/sources.list.d/'
  }

  function do_copy_conf_stable_backports {
      sudo -A cp -vf -- './debian_stable_backports.list' '../etc/apt/sources.list.d/'
  }

  function do_copy_conf_xanmod {
      sudo -A cp -vf -- './xanmod.list' '../etc/apt/sources.list.d/'
  }

  function do_copy_conf {
      do_copy_conf_testing
      do_copy_conf_xanmod
  }
#+end_src

*** The xanmod config
#+begin_src conf :tangle ./xanmod.list
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/XANMOD/dists/releases/main/binary-amd64/ ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/XANMOD/dists/releases/main/binary-i386/ ./
#+end_src

*** The main config

**** Testing
#+begin_src conf :tangle ./debian_testing.list
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/non-free-firmware/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/non-free-firmware/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/non-free/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/non-free/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/contrib/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/contrib/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/main/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/main/binary-amd64 ./

  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/contrib/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/main/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/non-free-firmware/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/testing/non-free/source/ ./
#+end_src

**** Stable
#+begin_src conf :tangle ./debian_stable.list
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/non-free-firmware/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/non-free-firmware/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/non-free/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/non-free/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/contrib/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/contrib/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/main/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/main/binary-amd64 ./

  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/contrib/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/main/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/non-free-firmware/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable/non-free/source/ ./
#+end_src

**** Stable-backports
#+begin_src conf :tangle ./debian_stable_backports.list
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/non-free-firmware/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/non-free-firmware/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/non-free/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/non-free/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/contrib/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/contrib/binary-amd64 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/main/binary-i386 ./
  deb [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/main/binary-amd64 ./

  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/contrib/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/main/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/non-free-firmware/source/ ./
  deb-src [trusted=yes] file:///repo/everything/apt-mirror/MY_MIRRORS/DEBIAN/dists/stable-backports/non-free/source/ ./
#+end_src

** Run apt update stuff inside the chroot
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_apt_update {
      pushd ../
      sudo -A chroot ./ apt-get update
      popd
  }
#+end_src

*** Updates
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  do_copy_conf
  do_apt_update
#+end_src

** Run apt update and upgrade stuff inside the chroot
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_apt_update_upgrade {
      pushd ../
      sudo -A chroot ./ apt-get update
      sudo -A chroot ./ apt-get -y dist-upgrade
      popd
  }
#+end_src

*** COMMENT Upgrades
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  do_apt_update_upgrade
#+end_src

** Run apt build-dep stuff inside the chroot
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_apt_build {
      pushd ../
      sudo -A chroot ./ apt-get build-dep -y -f ${@}
      popd
  }
#+end_src

** Run apt install stuff inside the chroot
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_apt_install {
      pushd ../
      sudo -A chroot ./ apt-get install -m -y -f ${@}
      popd
  }
#+end_src

** Run apt search stuff inside the chroot
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_apt_search {
      pushd ../
      sudo -A chroot ./ apt-cache search ${@}
      popd
  }
#+end_src

** Run install for standard list of packages
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function do_apt_install_standard {
      do_apt_install eatmydata build-essential tmux flatpak vim neovim
      do_apt_install firmware-misc-nonfree amd64-microcode intel-microcode firmware-linux-nonfree firmware-linux live-task-non-free-firmware-pc live-task-non-free-firmware-server bluez-firmware firmware-iwlwifi
      do_apt_install lightdm sddm btrfs-progs lvm2 parted gdisk
      do_apt_install lxqt kwin-x11 kwin-wayland i3
      do_apt_install 'linux-headers-6.6.63-x64v3-xanmod1' 'linux-image-6.6.63-x64v3-xanmod1'
      do_apt_build tmux flatpak
  }
#+end_src

*** Installs
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  do_apt_install_standard
#+end_src

** Setup fstab
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./functions.sh
  function write_fstab {
    echo "$(grep $(realpath ..) /proc/self/mounts | cut -d ' ' -f1)	/	btrfs	compress=zstd:3,autodefrag,rw	0	1" > ../etc/fstab
  }
#+end_src

*** Write fstab
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  write_fstab
#+end_src

#+RESULTS:
: /home/asd/GITLAB/aravindhv101/config_storage	/	btrfs	compress=zstd:3,autodefrag,rw	0	1

** Main execution

*** COMMENT search
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  do_apt_search firmware
#+end_src

*** unmount all fs
#+begin_src sh :shebang #!/bin/bash :results output :tangle ./install.sh
  do_unbind_all
#+end_src
